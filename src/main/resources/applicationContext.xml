<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!-- **************  MVC 配置 **************** -->
    <mvc:annotation-driven/>
    <mvc:resources mapping="/images/**" location="/images/" order="2"></mvc:resources>
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"
          p:viewClass="org.springframework.web.servlet.view.JstlView"
          p:contentType="text/html;charset=utf-8"
          p:prefix="/WEB-INF/view/"
          p:suffix=".jsp"/>
    <!-- **************  MVC 配置 **************** -->

    <!-- 设置注解 -->
    <context:annotation-config />
    <!-- 包扫描 -->
    <context:component-scan base-package="com.example.*" />
    <!-- 扫描配置文件 -->
    <context:property-placeholder location="classpath*:*.properties" />


    <!--<bean id="slf4j-filter" class="com.alibaba.druid.filter.logging.Slf4jLogFilter">-->
        <!--<property name="statementExecutableSqlLogEnable" value="true" />-->
    <!--</bean>-->

    <!-- ************** DataSource: dbcp 数据库配置 **************** -->

    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
          destroy-method="close" lazy-init="false">
        <!--<property name="driverClassName" value="${jdbc.driverClassName}" />-->
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
        <!-- 配置初始化大小、最小、最大 -->
        <property name="initialSize" value="1" />
        <property name="minIdle" value="1" />
        <property name="maxActive" value="20" />
        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="5000" />

        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000" />

        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000" />

        <property name="validationQuery" value="SELECT 'x'" />
        <property name="testWhileIdle" value="true" />
        <property name="testOnBorrow" value="false" />
        <property name="testOnReturn" value="false" />

        <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
        <property name="poolPreparedStatements" value="false" />
        <property name="maxPoolPreparedStatementPerConnectionSize" value="20" />

        <property name="removeAbandoned" value="true" /> <!-- 打开removeAbandoned功能 -->
        <property name="removeAbandonedTimeout" value="1800" /> <!-- 1800秒，也就是30分钟 , 关闭30分钟内没有使用的连接 -->

        <!-- 配置监控统计拦截的filters -->
        <property name="filters" value="stat,slf4j" />
        <!--<property name="proxyFilters">-->
            <!--<list>-->
                <!--<ref bean= "slf4j-filter"/>-->
            <!--</list>-->
        <!--</property>-->
    </bean>

    <!-- ********* 事物管理 ************** -->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>


    <!--<aop:config>-->
        <!--<aop:advisor pointcut="execution(* com..*.*(..))"-->
                     <!--advice-ref="txAdvice" />-->
    <!--</aop:config>-->

    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="get*" read-only="true" />
            <tx:method name="query*" read-only="true" />
            <tx:method name="find*" read-only="true" />
            <tx:method name="load*" read-only="true" />
            <tx:method name="select*" read-only="true" />
            <tx:method name="*" propagation="REQUIRED" rollback-for="Exception" />
        </tx:attributes>
    </tx:advice>
    <!-- ********* 事物管理 ************** -->
    <!-- ********* JDBC ************** -->
    <bean class="org.springframework.jdbc.core.JdbcTemplate" id="jdbcTemplate">
        <property name="dataSource" ref="dataSource"></property>
    </bean>
    <!-- ********* JDBC ************** -->
</beans>